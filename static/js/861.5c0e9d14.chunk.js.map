{"version":3,"file":"static/js/861.5c0e9d14.chunk.js","mappings":"kKACA,G,QAA0B,0BAA1B,EAAmE,+BAAnE,EAAkH,+BAAlH,EAA+J,6BCA/J,EAAyB,2BAAzB,EAA6D,2BAA7D,EAAsG,gC,oBCctG,EAZmB,SAACA,GAChB,OACI,gBAAKC,UAAWC,EAAhB,UACI,UAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GACxBH,UAAW,SAACI,GAAD,OAAaA,EAAQC,SAAWJ,EAAiB,IADrE,WAEI,gBAAKK,IAAI,wDAAwDC,IAAI,MACrE,iBAAMP,UAAWC,EAAjB,SAAuCF,EAAMS,aCR7D,EAAyB,4BAAzB,EAA+D,6BCS/D,EARgB,SAACT,GACb,OACI,gBAAKC,UAAWC,EAAhB,UACI,cAAGD,UAAWC,EAAd,SAAgCF,EAAMU,a,oBCAlD,EAH0BC,EAAAA,GAAW,CACjCD,QAASC,EAAAA,KAAaC,SAAS,c,UC0B7BC,EAAgB,CAClBH,QAAS,IAGPI,EAAc,SAACd,GAOjB,OACI,SAAC,KAAD,CACIa,cAAeA,EACfE,SATS,SAACC,EAAQC,GACtBA,EAAQC,YACRC,QAAQC,IAAIJ,GACZhB,EAAMqB,WAAWL,EAAON,UAOpBY,iBAAkBC,EAHtB,SAMQ,SAAAC,GACI,OACI,UAAC,KAAD,CAAMvB,UAAWC,EAAjB,WACI,SAACuB,EAAA,EAAD,CACIC,QAAQ,WACRjB,KAAK,UACLkB,SAAS,EACTC,YAAY,kBAEhB,mBACIC,KAAK,SACLC,UAAWN,EAAOO,QAClB9B,UAAS,UAAKC,EAAL,QAHb,yBAe5B,EA/DgB,SAACF,GACb,IAAIgC,EAAkBhC,EAAMiC,YAAYC,QAAQC,KAAI,SAAAC,GAAM,OAAK,SAAC,EAAD,CAAY3B,KAAM2B,EAAO3B,KAAML,GAAIgC,EAAOhC,IAASgC,EAAOhC,OACrHiC,EAAmBrC,EAAMiC,YAAYK,SAASH,KAAI,SAAAzB,GAAO,OAAI,SAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQN,OAMjH,OACI,iBAAKH,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACK8B,KAEL,2BACKK,GACD,SAACvB,EAAD,CAAaO,WAXN,SAACkB,GAChBvC,EAAMwC,YAAYD,a,oBCO1B,GAAeE,E,QAAAA,KACXC,EAAAA,EAAAA,KAfoB,SAACC,GACrB,MAAO,CACHV,YAAaU,EAAMV,gBAIA,SAACW,GACxB,MAAO,CACHJ,YAAa,SAACD,GACVK,GAASC,EAAAA,EAAAA,GAAyBN,SAO1CO,EAAAA,EAFJ,CAGEC,I,4JClBIC,EAA6B,SAACL,GAChC,MAAO,CACHM,OAAQN,EAAMO,KAAKD,OACnBE,OAAQR,EAAMO,KAAKC,SAIdL,EAAmB,SAACM,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAKtD,MAAMiD,QAAWK,KAAKtD,MAAMuD,OAAOC,OAAOC,WAE7C,SAACL,GAAD,UAAeE,KAAKtD,SAF2C,SAAC,KAAD,CAAUG,GAAI,eAHjD,GACXuD,EAAAA,WAQhC,OAAOC,EAAAA,EAAAA,IAAWjB,EAAAA,EAAAA,IAAQM,EAARN,CAAoCW","sources":["../../../../../../\u0000#PROG/React/projects/02-second-project2022/react-2/src/components/Dialogs/Dialogs.module.css","../../../../../../\u0000#PROG/React/projects/02-second-project2022/react-2/src/components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","../../../../../../\u0000#PROG/React/projects/02-second-project2022/react-2/src/components/Dialogs/MessageItem/MessageItem.module.css","components/Dialogs/MessageItem/MessageItem.jsx","components/FormValidation/MessageFormSchema.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__okRxq\",\"dialogs_elems\":\"Dialogs_dialogs_elems__KMKod\",\"message_field\":\"Dialogs_message_field__3y+Lh\",\"message_btn\":\"Dialogs_message_btn__RPjWD\",\"message_field_form\":\"Dialogs_message_field_form__EcXRK\",\"error\":\"Dialogs_error__BxI86\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__08ITE\",\"active\":\"DialogItem_active__k6NtI\",\"dialog_name\":\"DialogItem_dialog_name__Gx9yI\"};","import classes from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id}\r\n                     className={(navData) => navData.isActive ? classes.active : ''}>\r\n                <img src=\"https://cdn-icons-png.flaticon.com/512/147/147142.png\" alt=\"\"/>\r\n                <span className={classes.dialog_name}>{props.name}</span>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"MessageItem_dialog__sWZXx\",\"message\":\"MessageItem_message__mgugc\"};","import classes from './MessageItem.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <p className={classes.message}>{props.message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import * as Yup from \"yup\";\r\n\r\nconst messageFormSchema = Yup.object({\r\n    message: Yup.string().required('Required')\r\n});\r\nexport default messageFormSchema;","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./MessageItem/MessageItem\";\r\nimport {Form, Formik} from \"formik\";\r\nimport messageFormSchema from '../FormValidation/MessageFormSchema';\r\nimport {FormikControl} from \"../Forms/FormikControl\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(dialog => (<DialogItem name={dialog.name} id={dialog.id} key={dialog.id}/>))\r\n    let messagesElements = props.dialogsPage.messages.map(message => <Message message={message.message} key={message.id}/>)\r\n\r\n    const setMessage = (text) => {\r\n        props.sendMessage(text);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogs_elems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div>\r\n                {messagesElements}\r\n                <MessageForm setMessage={setMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst initialValues = {\r\n    message: ''\r\n}\r\n\r\nconst MessageForm = (props) => {\r\n    const onSubmit = (values, actions) => {\r\n        actions.resetForm()\r\n        console.log(values)\r\n        props.setMessage(values.message)\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={messageFormSchema}\r\n        >\r\n            {\r\n                formik => {\r\n                    return (\r\n                        <Form className={classes.message_field}>\r\n                            <FormikControl\r\n                                control='textarea'\r\n                                name='message'\r\n                                noError={true}\r\n                                placeholder='Start typing'\r\n                            />\r\n                            <button\r\n                                type='submit'\r\n                                disabled={!formik.isValid}\r\n                                className={`${classes.message_btn} btn`}\r\n                            >\r\n                                Send\r\n                            </button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import {sendMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (text) => {\r\n            dispatch(sendMessageActionCreator(text))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport withRouter from \"../help_func/withRouter\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth && !this.props.router.params.profileId) return <Navigate to={'/login'}/>;\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return withRouter(connect(mapStateToPropsForRedirect)(RedirectComponent))\r\n}"],"names":["props","className","classes","to","id","navData","isActive","src","alt","name","message","Yup","required","initialValues","MessageForm","onSubmit","values","actions","resetForm","console","log","setMessage","validationSchema","messageFormSchema","formik","FormikControl","control","noError","placeholder","type","disabled","isValid","dialogsElements","dialogsPage","dialogs","map","dialog","messagesElements","messages","text","sendMessage","compose","connect","state","dispatch","sendMessageActionCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","userId","Component","RedirectComponent","this","router","params","profileId","React","withRouter"],"sourceRoot":""}