{"version":3,"file":"static/js/124.096e233b.chunk.js","mappings":"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","sources":["../../../../../../\u0000#PROG/React/projects/02-second-project2022/react-2/src/components/Profile/Profile.module.css","../../../../../../\u0000#PROG/React/projects/02-second-project2022/react-2/src/components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","../../../../../../\u0000#PROG/React/projects/02-second-project2022/react-2/src/components/Profile/MyPosts/MyPosts.module.css","../../../../../../\u0000#PROG/React/projects/02-second-project2022/react-2/src/components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/FormValidation/PostFormSchema.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"ProfileInfo_description__945PC\",\"head_img\":\"ProfileInfo_head_img__jr6KZ\",\"status_input\":\"ProfileInfo_status_input__MR1Ys\"};","import React, {useEffect, useState} from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        className={classes.status_input}\r\n                        autoFocus={true}\r\n                        value={status}\r\n                        onChange={onStatusChange}\r\n                        onBlur={deactivateEditMode}\r\n                        placeholder='Your status'\r\n                    />\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let contacts = [];\r\n    let i = 1\r\n        for (let contact in profile.contacts) {\r\n            if (profile.contacts[contact]) {\r\n                contacts.push(\r\n                    <li key={i}>{contact} - {profile.contacts[contact]}</li>\r\n                )\r\n                i++\r\n            }\r\n        }\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.description}>\r\n                <img src={profile.photos.large === null ? null : profile.photos.large} alt=''/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <h1>About me</h1>\r\n                <p>{profile.aboutMe}</p>\r\n                <h2>Contacts</h2>\r\n                <ul>\r\n                    {contacts}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts_header\":\"MyPosts_posts_header__PqCxF\",\"post_field\":\"MyPosts_post_field__JBC3B\",\"submit_btn\":\"MyPosts_submit_btn__W27Th\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__NDEuW\",\"desc\":\"Post_desc__JS5Pl\",\"likes\":\"Post_likes__m6sjG\"};","import classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <div className={classes.item}>\r\n            <div className={classes.desc}>\r\n                <img src=\"https://cdn-icons-png.flaticon.com/512/147/147142.png\" alt=\"\"/>\r\n                <span>{props.message}</span>\r\n            </div>\r\n\r\n            <div className={classes.likes}>\r\n                <span>{props.likesCount} Likes</span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","import * as Yup from \"yup\";\r\n\r\nconst postFormSchema = Yup.object({\r\n    postText: Yup.string().required('Required')\r\n});\r\nexport default postFormSchema;","import React from \"react\";\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Form, Formik} from \"formik\";\r\nimport {FormikControl} from \"../../Forms/FormikControl\";\r\nimport postFormSchema from \"../../FormValidation/PostFormSchema\";\r\n\r\nconst MyPosts = props => {\r\n    let postsElements = [...props.posts].reverse()\r\n        .map(post =>\r\n            <Post\r\n                message={post.message}\r\n                likesCount={post.likesCount}\r\n                key={post.id}\r\n            />\r\n        )\r\n    let onAddPost = (text) => {\r\n        props.addPost(text)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className={classes.posts_header}>My posts</h3>\r\n\r\n            <PostForm onAddPost={onAddPost}/>\r\n\r\n            {postsElements}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nconst initialValues = {\r\n    postText: ''\r\n}\r\n\r\nconst PostForm = (props) => {\r\n    const onSubmit = (values, actions) => {\r\n        actions.resetForm()\r\n        console.log(values)\r\n        props.onAddPost(values.postText)\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={postFormSchema}\r\n        >\r\n            {\r\n                formik => {\r\n                    return (\r\n                        <Form className={classes.post_field}>\r\n                            <FormikControl\r\n                                control='textarea'\r\n                                name='postText'\r\n                                noError={true}\r\n                                placeholder='Your post'\r\n                            />\r\n\r\n                            <button\r\n                                type='submit'\r\n                                disabled={!formik.isValid}\r\n                                className={`${classes.submit_btn} btn`}\r\n                            >\r\n                                Post\r\n                            </button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (text) => {\r\n            dispatch(addPostActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import classes from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={classes.content}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer store={props.store} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport withRouter from \"../../help_func/withRouter\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n    componentDidMount() {\r\n        let profileId = this.props.router.params.profileId;\r\n        if(!profileId) {\r\n            profileId = this.props.userId;\r\n        }\r\n\r\n        this.props.getUserProfile(profileId);\r\n        this.props.getStatus(profileId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)\r\n","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport withRouter from \"../help_func/withRouter\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth && !this.props.router.params.profileId) return <Navigate to={'/login'}/>;\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return withRouter(connect(mapStateToPropsForRedirect)(RedirectComponent))\r\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","className","classes","autoFocus","value","onChange","e","currentTarget","onBlur","updateStatus","placeholder","profile","Preloader","contacts","i","contact","push","src","photos","large","alt","aboutMe","message","likesCount","Yup","postText","required","initialValues","PostForm","onSubmit","values","actions","resetForm","console","log","onAddPost","validationSchema","postFormSchema","formik","FormikControl","control","name","noError","type","disabled","isValid","postsElements","posts","reverse","map","post","id","text","addPost","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","store","ProfileContainer","profileId","this","router","params","userId","getUserProfile","getStatus","React","compose","auth","isAuth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}